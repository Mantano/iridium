import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

import javax.xml.parsers.DocumentBuilderFactory

buildscript {
    ext.kotlin_version = '1.9.23'
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:8.5.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        ivy {
            url = uri('https://liblcp.dita.digital')
            patternLayout {
                artifact ('/readium/liblcp/android/aar/test/3.0.0.aar')
            }
            metadataSources { artifact() }
        }

    }
    // From https://github.com/pichillilorenzo/flutter_inappwebview/pull/2182
    // This temporary fix is required to fix an issue introduced when adding again webview_flutter
    // to the dependencies, for the MacOS version.
    // TODO It will be removed as soon as Lorenzo merges the PR
    configurations.all {
        resolutionStrategy {
            force 'androidx.webkit:webkit:1.8.0'
        }
    }
}


rootProject.buildDir = '../build'
subprojects {
    project.buildDir = "${rootProject.buildDir}/${project.name}"
}

subprojects {
    project.buildDir = "${rootProject.buildDir}/${project.name}"
    // From: https://github.com/flutter/flutter/issues/125181#issuecomment-1555034383
    afterEvaluate {
        // check if android block is available

        if (it.hasProperty('android')) {

            if (it.android.namespace == null) {
                def builderFactory = DocumentBuilderFactory.newInstance()
                def builder = builderFactory.newDocumentBuilder()
                def xmlFile = file(project.android.sourceSets.main.manifest.srcFile)
                def document = builder.parse(xmlFile)
                def packageName = document.documentElement.getAttribute("package")
                println("Setting ${packageName} as android namespace")
                project.android.namespace = packageName
            }

            def javaVersion = JavaVersion.VERSION_21 // Kotlin doesn't support 21 yet (March 2024)
            android {
                def androidApiVersion = 35
                compileSdkVersion androidApiVersion
                defaultConfig {
                    targetSdkVersion androidApiVersion
                }
                compileOptions {
                    sourceCompatibility javaVersion
                    targetCompatibility javaVersion
                }
                tasks.withType(KotlinCompile).configureEach {
                    kotlinOptions {
                        jvmTarget = javaVersion.toString()
                    }
                }
                println("Setting java version to ${javaVersion.toString()} which is $javaVersion")
                println("Setting compileSdkVersion and targetSdkVersion to $androidApiVersion")
            }
        }

    }

}

subprojects {
    project.evaluationDependsOn(':app')
}

tasks.register("clean", Delete) {
    delete rootProject.buildDir
}
